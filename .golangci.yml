linters-settings:
  dupl:
    threshold: 100
  exhaustive:
    default-signifies-exhaustive: false
  funlen:
    lines: 100
    statements: 503
  goconst:
    min-len: 2
    min-occurrences: 2
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc
  gocyclo:
    min-complexity: 15 # todo затюнить или оставить
  goimports:
    local-prefixes: github.com/golangci/golangci-lint
  golint:
    min-confidence: 0
  gomnd:
    settings:
      mnd:
        # don't include the "operation" and "assign"
        checks: argument,case,condition,return
  govet:
    check-shadowing: true
    settings:
      printf:
        funcs:
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
  lll:
    line-length: 140 #todo подобрать длину (меньше или больше)
  maligned:
    suggest-new: true
  misspell:
    locale: US, RU
  nolintlint:
    allow-leading-space: true # don't require machine-readable nolint directives (i.e. with no leading space)
    allow-unused: false # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: false # don't require nolint directives to be specific about which linter is being skipped
  wsl: #выглядит так, что не работают :))
    allow-cuddle-declarations: true
    allow-multiline-assign: true
    force-case-trailing-whitespace: false
    allow-assign-and-call: true

linters:
  disable-all: true
  enable:
    - bodyclose          # закрытие req.Body
    - deadcode           # неиспользуемый код
    #- depguard          # запрет импорта библиотек на уровне проекта
    - dogsled            # слишком много пропускаемых значений в ф-иях, возвращающих составной результат x,_,_,_ := func()..
    - dupl               # дублирующийся код
    - errcheck           # пропущенные проверки ошибок
    - funlen             # размер функций в строках
    - gochecknoinits     # проверка, что в пакетах нет функций init
    - goconst            # пытается найти повторяющиеся строки, которые можно было бы заменить константами
    - gocritic           # мегалинтер с кучей проверок на стиль, баги, производительность
    - gocyclo            # цикломатическая сложность не должна быть выше пороговой
    - gofmt              # форматированность по gofmt
    - goimports          # соответствие goimports
    - golint             # линтер от Google (соответствие effective go)
    - gomnd              # передача чисел вместо констант (например 404 вместо http.ErrorNotFound)
    - goprintffuncname   # проверка на то, что функции, схожие по назначению с Printf оканчиваются на f
    - gosec              # поиск проблем с безопасностью, например, хардкоженные логин-пароль
    - gosimple           # поиск ненужных усложнений
    - govet              # проверка статических ошибок
    - ineffassign        # результат изменения переменной не используется
    - lll                # длина строк не больше порогового значения
    - misspell           # опечатки
    - nakedret           # длинные функции без return
    - nolintlint         # формат //nolint:<linters> // почему отключаем линтер(ы)
    - rowserrcheck       # необходимость проверять rows.Error()
    - scopelint          # использование переменных из вышестоящей области видимости
    - staticcheck        # https://staticcheck.io/
    - structcheck        # проверка структур
    - stylecheck
    - typecheck
    - unconvert          # детектит ненужные преобразования типов
    - unparam
    - unused
    - varcheck
    - whitespace
    - asciicheck
    #- exhaustive        #(TODO: enable after next release; current release at time of writing is v1.27)
    - gochecknoglobals   # проверка на отсутствие глобальных переменных
    - gocognit           # когнитивная сложность (например, кучу if-else заменять на switch, etc)
    - godot              # точка в конце комментариев верхнего уровня
    #- godox              # комментарии с todo/bug/fixme
    #- goerr113          # обработка ошибок согласно новым возможностям go 1.13 (тут будет весело)
    #- maligned          # в ряде случаев правильный порядок полей и методов в структуре позволяет экономить память
    - nestif             # детектор вложенных ифов
    - prealloc           # детектор слайсов, которые можно сразу объявить с заданной длиной
    - wsl                # отступы от различных конструкций

issues:
  exclude-rules:
    - path: _test\.go
      linters:
        - gomnd
        - funlen
        - goconst
        - lll
        - dupl
        - godox
        - malloc
        - scopelint
    # https://github.com/go-critic/go-critic/issues/926
    - linters:
        - gocritic
      text: "unnecessaryDefer:"
